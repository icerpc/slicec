name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 7

    steps:
      - uses: actions/checkout@v4
      - name: ðŸ“¦ Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            Cargo.lock
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: ðŸ”¨ Build
        run: cargo build
      - name: ðŸ§ª Test
        run: cargo test
      - name: ðŸ”Ž Lint
        run: cargo clippy --no-deps
      - name: ðŸ“š Generate Documentation
        run: cargo doc --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "-D warnings"

  format:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
      - name: ðŸ“¦ Install nightly toolchain
        run: |
          rustup toolchain install nightly
          rustup component add rustfmt --toolchain nightly
      - name: ðŸ”Ž Format using rustfmt
        run: cargo +nightly fmt --check
